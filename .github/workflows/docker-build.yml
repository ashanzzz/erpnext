name: 构建 Docker 镜像

on:
  # 触发条件：推送到 main 分支或者手动触发
  push:
    branches:
      - main
    paths:
      - 'apps.json'
      - '.github/workflows/docker-build.yml'
      - 'Dockerfile'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: 
      contents: read
      packages: write
    
    steps:
      # Step 1: 检出代码
      - name: 检出代码
        uses: actions/checkout@v3

      # Step 2: 获取真实版本号（从 Git 标签获取版本号，或者从 apps.json 获取）
      - name: 获取真实版本号
        id: get_version
        run: |
          # 从 Git 标签获取版本号（如：v1.2.3）
          VERSION=$(git describe --tags --abbrev=0 | sed 's/^v//')
          
          # 如果没有 Git 标签，则从 apps.json 获取版本号
          if [ -z "$VERSION" ]; then
            VERSION=$(jq -r '.[0].branch' apps.json | sed 's/version-//')
          fi

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "获取到的版本号是：$VERSION"

      # Step 3: 生成 APPS_JSON_BASE64
      - name: 生成 APPS_JSON_BASE64
        run: |
          echo "APPS_JSON_BASE64=$(base64 -w 0 apps.json)" >> $GITHUB_ENV

      # Step 4: 克隆 frappe_docker
      - name: 克隆 frappe_docker
        run: |
          git clone https://github.com/frappe/frappe_docker
          cd frappe_docker
          
      # Step 5: 设置 Docker Buildx
      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      # Step 6: 登录到 GitHub Container Registry
      - name: 登录 GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 7: 构建并推送到 GitHub Container Registry
      - name: 构建并推送到 GitHub Container Registry
        uses: docker/build-push-action@v3
        with:
          context: frappe_docker
          file: frappe_docker/images/layered/Containerfile
          push: true
          platforms: linux/amd64
          build-args: |
            FRAPPE_PATH=https://github.com/frappe/frappe
            FRAPPE_BRANCH=version-${{ env.VERSION }}
            APPS_JSON_BASE64=${{ env.APPS_JSON_BASE64 }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/erpnext:${{ env.VERSION }}
            ghcr.io/${{ github.repository_owner }}/erpnext:latest
