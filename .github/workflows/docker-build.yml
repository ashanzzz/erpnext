name: 构建并推送Docker镜像

on:
  schedule:
    - cron: '0 0 1 * *'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'apps.json'
      - '.github/workflows/docker-build.yml'
      - 'Dockerfile'

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      # Step 1: 检出代码
      - name: 检出代码
        uses: actions/checkout@v3

      # Step 2: 生成 APPS_JSON_BASE64
      - name: 生成 APPS_JSON_BASE64
        run: |
          echo "生成 APPS_JSON_BASE64:"
          export APPS_JSON_BASE64=$(base64 -w 0 apps.json)
          echo "APPS_JSON_BASE64=$APPS_JSON_BASE64" >> $GITHUB_ENV
          echo "解码后的 apps.json:"
          echo "$APPS_JSON_BASE64" | base64 -d

      # Step 3: 克隆 frappe_docker
      - name: 克隆 frappe_docker
        run: git clone https://github.com/frappe/frappe_docker

      # Step 4: 设置 Buildx
      - name: 设置 Buildx
        uses: docker/setup-buildx-action@v2

      # Step 5: 登录到 GitHub Container Registry
      - name: 登录 GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 6: 构建和推送镜像
      - name: 构建和推送镜像
        uses: docker/build-push-action@v3
        with:
          context: frappe_docker
          file: frappe_docker/images/layered/Containerfile
          push: true
          platforms: linux/amd64
          build-args: |
            FRAPPE_PATH=https://github.com/frappe/frappe
            FRAPPE_BRANCH=version-15
            APPS_JSON_BASE64=${{ env.APPS_JSON_BASE64 }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/erpnext:latest
            ghcr.io/${{ github.repository_owner }}/erpnext:version-15
        env:
          DOCKER_BUILDKIT: 1
          BUILDKIT_PROGRESS: plain
